# -*- coding: utf-8 -*-
"""NBA Basketball Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-bxw_OCxUmDV0RSO89EMe94FHTnJv1yL
"""

#NBA Basketball Analysis using Kmeans algorithm

#import the dependencies
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

#load the data 
from google.colab import files
uploaded = files.upload()
nba=pd.read_csv('nba_2013.csv')
nba.head(7)

#Get the number of rows and columns 
nba.shape

# Find the average value for each numeric column
nba.mean()

# mean of the specific column
nba.loc[:,"fg"].mean()

#Make pairwise scatter plots
sns.pairplot(nba[["ast", "fg", "trb"]])
plt.show()

#Make Heat Maps to see correlations
correlation = nba[["ast", "fg", "trb"]].corr()
sns.heatmap(correlation, annot=True)

# Make clusters of the players using a machine learning model called kMeans
from sklearn.cluster import KMeans
kmeans_model = KMeans(n_clusters=5, random_state=1)# Create a 5 cluster kmeans model
good_columns = nba._get_numeric_data().dropna(axis=1)#remove any non-numeric columns, or columns with missing values (NA, Nan, etc).
kmeans_model.fit(good_columns)# Train the model
labels = kmeans_model.labels_ # Get the labels or (cluster label for each player)
labels

#Plot players by cluster
from sklearn.decomposition import PCA
pca_2 = PCA(2)
plot_columns = pca_2.fit_transform(good_columns)
plt.scatter(x=plot_columns[:,0], y=plot_columns[:,1], c=labels)
plt.show()

#Show plot points
plot_columns

# Find player LeBron
LeBron = good_columns.loc[ nba['player'] == 'LeBron James',: ]

#Find player Durant
Durant = good_columns.loc[ nba['player'] == 'Kevin Durant',: ]

#print the players
print(LeBron)
print(Durant)

#Change the dataframe to a list Lebron to be able to use the kmeans model to make predictions/grouping
Lebron_list = LeBron.values.tolist()
Durant_list = Durant.values.tolist()

#Predict which group LeBron James and Kevin Durant belongs
LeBron_Cluster_Label = kmeans_model.predict(Lebron_list)
Durant_Cluster_Label = kmeans_model.predict(Durant_list)

print(LeBron_Cluster_Label)
print(Durant_Cluster_Label)

# Look at all of the column coorelations
nba.corr()

#Split the data into 80% training and 20% testing
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(nba[['fg']], nba[['ast']], test_size=0.2, random_state=42)

#Create the Linear Regression Model
from sklearn.linear_model import LinearRegression
lr = LinearRegression() # Create the model
lr.fit(x_train, y_train) #Train the model
predictions = lr.predict(x_test) #Make predictions on the test data

print(predictions)
print(y_test)

# Testing Model:
lr_confidence = lr.score(x_test, y_test)
print("lr confidence (R^2): ", lr_confidence)

# mean squared error:
from sklearn.metrics import mean_squared_error
print("Mean Squared Error (MSE): ",mean_squared_error(y_test, predictions))